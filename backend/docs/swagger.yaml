definitions:
  game.CreateGameRequest:
    properties:
      boardSize:
        type: integer
      playerIds:
        items:
          type: string
        type: array
    type: object
  game.Game:
    properties:
      boardSize:
        type: integer
      createdAt:
        type: string
      id:
        type: string
      players:
        items:
          type: string
        type: array
      status:
        description: active, finished
        type: string
    type: object
  game.JoinGameRequest:
    properties:
      playerId:
        type: string
    type: object
  user.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  user.LoginResponse:
    properties:
      id:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
  user.SignupRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  user.User:
    properties:
      id:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /games:
    post:
      consumes:
      - application/json
      description: Create a new game with a list of player IDs and board size
      parameters:
      - description: Game info
        in: body
        name: game
        required: true
        schema:
          $ref: '#/definitions/game.CreateGameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new game
      tags:
      - games
  /games/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve game details by game ID
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/game.Game'
      security:
      - BearerAuth: []
      summary: Get game details
      tags:
      - games
  /games/{id}/join:
    post:
      consumes:
      - application/json
      description: Add a player to an existing game by game ID
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      - description: Join info
        in: body
        name: game
        required: true
        schema:
          $ref: '#/definitions/game.JoinGameRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Join an existing game
      tags:
      - games
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.LoginResponse'
      summary: Login a user
      tags:
      - users
  /signup:
    post:
      consumes:
      - application/json
      description: Create a new user with username and password
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.SignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Signup a new user
      tags:
      - users
  /users:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
      security:
      - BearerAuth: []
      summary: Get all users
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
